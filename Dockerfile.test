# Simplified test version of optimized Dockerfile
ARG PYTHON_VERSION=3.12
ARG NODE_VERSION=20

# Stage 1: Frontend Dependencies
FROM node:${NODE_VERSION}-alpine AS frontend-deps
WORKDIR /app/frontend
RUN apk add --no-cache dumb-init
COPY frontend/package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Stage 2: Frontend Builder  
FROM frontend-deps AS frontend-builder
COPY frontend/ ./
RUN npm run build

# Stage 3: Python Dependencies
FROM python:${PYTHON_VERSION}-alpine AS python-deps
RUN apk add --no-cache --virtual .build-deps gcc musl-dev libffi-dev openssl-dev \
    && apk add --no-cache dumb-init curl
COPY backend/requirements.txt /tmp/requirements.txt
RUN pip install --no-cache-dir --user -r /tmp/requirements.txt \
    && apk del .build-deps \
    && find /root/.local -name "*.pyc" -delete

# Stage 4: Production Runtime
FROM nginx:1.24-alpine AS runtime

# Install Python and create user
RUN apk add --no-cache python3 py3-pip dumb-init curl shadow \
    && addgroup -g 1001 musashi \
    && adduser -D -u 1001 -G musashi musashi

WORKDIR /app

# Copy dependencies and application
COPY --from=python-deps /root/.local /home/musashi/.local
COPY --chown=musashi:musashi backend/app ./app
COPY --from=frontend-builder /app/frontend/build /usr/share/nginx/html

ENV PATH=/home/musashi/.local/bin:$PATH

# Simple nginx config for testing
RUN echo 'server { \
    listen 8080; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { try_files $uri $uri/ /index.html; } \
    location /api/ { \
        proxy_pass http://127.0.0.1:8000/api/; \
        proxy_set_header Host $host; \
    } \
    location /health { return 200 "healthy"; } \
}' > /etc/nginx/conf.d/default.conf

# Simple startup script
RUN echo '#!/bin/sh\nuvicorn app.main:app --host 127.0.0.1 --port 8000 & nginx -g "daemon off;"' > /app/start.sh \
    && chmod +x /app/start.sh \
    && chown -R musashi:musashi /var/cache/nginx /var/log/nginx /usr/share/nginx/html /app

USER musashi
EXPOSE 8080
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

ENTRYPOINT ["dumb-init", "--"]
CMD ["/app/start.sh"]