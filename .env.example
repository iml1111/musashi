# ===========================================
# Musashi Docker Compose Environment Variables Settings
# ===========================================
# Copy .env.example to .env and modify with actual values
# cp .env.example .env

# ===========================================
# Application Settings
# ===========================================

# Application port (Default: 8080)
MUSASHI_PORT=8080

# Runtime environment (production, development, testing)
ENVIRONMENT=production

# Debug mode (production에서는 반드Hour false)
DEBUG=false

# Log level (debug, info, warning, error, critical)
LOG_LEVEL=info

# JWT token secret key (Required - Change to secure value in production)
SECRET_KEY=your-super-secure-secret-key-change-this-in-production

# ===========================================
# Database Settings (MongoDB)
# ===========================================

# MongoDB connection URL
MONGODB_URL=mongodb://mongo:27017

# Database Name
DATABASE_NAME=musashi

# MongoDB Port (외부 노출용, DevelopmentHour에만 사용)
# Production에서는 127.0.0.1:27017 형태로 Limit 권장
MONGO_PORT=127.0.0.1:27017

# MongoDB Management자 계정 (Select사항 - Security 강화Hour 사용)
# MONGO_ROOT_USERNAME=admin
# MONGO_ROOT_PASSWORD=your-secure-mongo-password

# ===========================================
# CORS Settings
# ===========================================

# Allow할 Frontend URL (쉼표로 구Minute)
BACKEND_CORS_ORIGINS=http://localhost:8080,https://yourdomain.com

# ===========================================
# Redis Settings (Select사항)
# ===========================================

# Redis 비밀Number (Redis 활성화Hour)
# REDIS_PASSWORD=your-redis-password

# ===========================================
# Development Environment 전용 Settings
# ===========================================

# Development용 Frontend Vite Server API URL
VITE_API_URL=http://localhost:8000

# File Change 감지 활성화 (DevelopmentHour)
CHOKIDAR_USEPOLLING=true

# Python Path Settings (DevelopmentHour)
PYTHONPATH=/app
PYTHONUNBUFFERED=1

# ===========================================
# Security Settings
# ===========================================

# Session 쿠Key Settings
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=lax

# CSP Policy Settings
# CSP_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'

# ===========================================
# Monitoring Settings
# ===========================================

# 애플리케이션 Metric 수집 활성화
ENABLE_METRICS=true

# 헬스체크 엔드포인트 활성화
ENABLE_HEALTHCHECK=true

# ===========================================
# 이메Day Settings (Select사항)
# ===========================================

# SMTP Server Settings
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# SMTP_FROM_EMAIL=noreply@yourdomain.com
# SMTP_USE_TLS=true

# ===========================================
# 외부 Service Settings
# ===========================================

# S3 호환 스토리지 (File Upload용)
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# AWS_S3_BUCKET_NAME=musashi-uploads
# AWS_S3_REGION=us-east-1

# ===========================================
# Development자 Tool Settings
# ===========================================

# Development용 MongoDB Express Management자 계정
ME_CONFIG_BASICAUTH_USERNAME=admin
ME_CONFIG_BASICAUTH_PASSWORD=admin123

# ===========================================
# Production Optimization Settings
# ===========================================

# 워커 프로세스 수 (CPU 코어 수에 맞게 조정)
WORKERS_PER_CORE=1
MAX_WORKERS=4

# 커넥션 Pull Settings
DB_MIN_CONNECTIONS=1
DB_MAX_CONNECTIONS=10

# Caching Settings
CACHE_TTL=3600

# ===========================================
# Backup 및 복원 Settings
# ===========================================

# Auto Backup 활성화
ENABLE_AUTO_BACKUP=false

# Backup Save Path
BACKUP_PATH=/app/backups

# Backup 보존 기간 (Day)
BACKUP_RETENTION_DAYS=30